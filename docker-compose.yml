version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monitoring-app
    ports:
      - "${PORT:-3000}:3000"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PROMETHEUS_URL=${PROMETHEUS_URL:-http://prometheus:9090}
      - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
      - OLLAMA_MODEL=${OLLAMA_MODEL:-llama2}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
      - GCP_CLIENT_EMAIL=${GCP_CLIENT_EMAIL}
      - GCP_PRIVATE_KEY=${GCP_PRIVATE_KEY}
      - GCP_MONITORING_SCOPES=${GCP_MONITORING_SCOPES}
      - GCP_INSTANCE_ID=${GCP_INSTANCE_ID}
      - GCP_APP_ENGINE_SERVICE=${GCP_APP_ENGINE_SERVICE}
      - GCP_SQL_INSTANCE_ID=${GCP_SQL_INSTANCE_ID}
    depends_on:
      - prometheus
      - ollama
      - grafana
    restart: unless-stopped
    networks:
      - monitoring-network

  # Prometheus service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./config/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - monitoring-network

  # Grafana service
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "${GRAFANA_PORT:-3001}:3000"
    volumes:
      - ./config/grafana/provisioning:/etc/grafana/provisioning
      - ./config/grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-googlecloud-datasource
    restart: unless-stopped
    networks:
      - monitoring-network

  # Ollama for AI capabilities
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    restart: unless-stopped
    networks:
      - monitoring-network
    deploy:
      resources:
        reservations:
          devices:
            - capabilities: [gpu]

networks:
  monitoring-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
  ollama_data: 